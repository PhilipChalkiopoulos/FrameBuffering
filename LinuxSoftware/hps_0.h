#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'Qsys' in
 * file './Qsys.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'alt_vip_vfr_0', class 'alt_vip_vfr'
 * The macros are prefixed with 'ALT_VIP_VFR_0_'.
 * The prefix is the slave descriptor.
 */
#define ALT_VIP_VFR_0_COMPONENT_TYPE alt_vip_vfr
#define ALT_VIP_VFR_0_COMPONENT_NAME alt_vip_vfr_0
#define ALT_VIP_VFR_0_BASE 0x100
#define ALT_VIP_VFR_0_SPAN 512
#define ALT_VIP_VFR_0_END 0x2ff

/*
 * Macros for device 'alt_vip_mix_0', class 'alt_vip_mix'
 * The macros are prefixed with 'ALT_VIP_MIX_0_'.
 * The prefix is the slave descriptor.
 */
#define ALT_VIP_MIX_0_COMPONENT_TYPE alt_vip_mix
#define ALT_VIP_MIX_0_COMPONENT_NAME alt_vip_mix_0
#define ALT_VIP_MIX_0_BASE 0x10100
#define ALT_VIP_MIX_0_SPAN 1024
#define ALT_VIP_MIX_0_END 0x104ff

/*
 * Macros for device 'TERASIC_AUTO_FOCUS_0', class 'TERASIC_AUTO_FOCUS'
 * The macros are prefixed with 'TERASIC_AUTO_FOCUS_0_'.
 * The prefix is the slave descriptor.
 */
#define TERASIC_AUTO_FOCUS_0_COMPONENT_TYPE TERASIC_AUTO_FOCUS
#define TERASIC_AUTO_FOCUS_0_COMPONENT_NAME TERASIC_AUTO_FOCUS_0
#define TERASIC_AUTO_FOCUS_0_BASE 0x41000
#define TERASIC_AUTO_FOCUS_0_SPAN 32
#define TERASIC_AUTO_FOCUS_0_END 0x4101f

/*
 * Macros for device 'i2c_opencores_camera', class 'i2c_opencores'
 * The macros are prefixed with 'I2C_OPENCORES_CAMERA_'.
 * The prefix is the slave descriptor.
 */
#define I2C_OPENCORES_CAMERA_COMPONENT_TYPE i2c_opencores
#define I2C_OPENCORES_CAMERA_COMPONENT_NAME i2c_opencores_camera
#define I2C_OPENCORES_CAMERA_BASE 0x41040
#define I2C_OPENCORES_CAMERA_SPAN 128
#define I2C_OPENCORES_CAMERA_END 0x410bf

/*
 * Macros for device 'i2c_opencores_mipi', class 'i2c_opencores'
 * The macros are prefixed with 'I2C_OPENCORES_MIPI_'.
 * The prefix is the slave descriptor.
 */
#define I2C_OPENCORES_MIPI_COMPONENT_TYPE i2c_opencores
#define I2C_OPENCORES_MIPI_COMPONENT_NAME i2c_opencores_mipi
#define I2C_OPENCORES_MIPI_BASE 0x41060
#define I2C_OPENCORES_MIPI_SPAN 128
#define I2C_OPENCORES_MIPI_END 0x410df

/*
 * Macros for device 'mipi_pwdn_n', class 'altera_avalon_pio'
 * The macros are prefixed with 'MIPI_PWDN_N_'.
 * The prefix is the slave descriptor.
 */
#define MIPI_PWDN_N_COMPONENT_TYPE altera_avalon_pio
#define MIPI_PWDN_N_COMPONENT_NAME mipi_pwdn_n
#define MIPI_PWDN_N_BASE 0x41080
#define MIPI_PWDN_N_SPAN 64
#define MIPI_PWDN_N_END 0x410bf
#define MIPI_PWDN_N_BIT_CLEARING_EDGE_REGISTER 0
#define MIPI_PWDN_N_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MIPI_PWDN_N_CAPTURE 0
#define MIPI_PWDN_N_DATA_WIDTH 1
#define MIPI_PWDN_N_DO_TEST_BENCH_WIRING 0
#define MIPI_PWDN_N_DRIVEN_SIM_VALUE 0
#define MIPI_PWDN_N_EDGE_TYPE NONE
#define MIPI_PWDN_N_FREQ 50000000
#define MIPI_PWDN_N_HAS_IN 0
#define MIPI_PWDN_N_HAS_OUT 1
#define MIPI_PWDN_N_HAS_TRI 0
#define MIPI_PWDN_N_IRQ_TYPE NONE
#define MIPI_PWDN_N_RESET_VALUE 0

/*
 * Macros for device 'mipi_reset_n', class 'altera_avalon_pio'
 * The macros are prefixed with 'MIPI_RESET_N_'.
 * The prefix is the slave descriptor.
 */
#define MIPI_RESET_N_COMPONENT_TYPE altera_avalon_pio
#define MIPI_RESET_N_COMPONENT_NAME mipi_reset_n
#define MIPI_RESET_N_BASE 0x41090
#define MIPI_RESET_N_SPAN 64
#define MIPI_RESET_N_END 0x410cf
#define MIPI_RESET_N_BIT_CLEARING_EDGE_REGISTER 0
#define MIPI_RESET_N_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MIPI_RESET_N_CAPTURE 0
#define MIPI_RESET_N_DATA_WIDTH 1
#define MIPI_RESET_N_DO_TEST_BENCH_WIRING 0
#define MIPI_RESET_N_DRIVEN_SIM_VALUE 0
#define MIPI_RESET_N_EDGE_TYPE NONE
#define MIPI_RESET_N_FREQ 50000000
#define MIPI_RESET_N_HAS_IN 0
#define MIPI_RESET_N_HAS_OUT 1
#define MIPI_RESET_N_HAS_TRI 0
#define MIPI_RESET_N_IRQ_TYPE NONE
#define MIPI_RESET_N_RESET_VALUE 0

/*
 * Macros for device 'key', class 'altera_avalon_pio'
 * The macros are prefixed with 'KEY_'.
 * The prefix is the slave descriptor.
 */
#define KEY_COMPONENT_TYPE altera_avalon_pio
#define KEY_COMPONENT_NAME key
#define KEY_BASE 0x410a0
#define KEY_SPAN 64
#define KEY_END 0x410df
#define KEY_BIT_CLEARING_EDGE_REGISTER 0
#define KEY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define KEY_CAPTURE 0
#define KEY_DATA_WIDTH 4
#define KEY_DO_TEST_BENCH_WIRING 0
#define KEY_DRIVEN_SIM_VALUE 0
#define KEY_EDGE_TYPE NONE
#define KEY_FREQ 50000000
#define KEY_HAS_IN 1
#define KEY_HAS_OUT 0
#define KEY_HAS_TRI 0
#define KEY_IRQ_TYPE NONE
#define KEY_RESET_VALUE 0

/*
 * Macros for device 'sw', class 'altera_avalon_pio'
 * The macros are prefixed with 'SW_'.
 * The prefix is the slave descriptor.
 */
#define SW_COMPONENT_TYPE altera_avalon_pio
#define SW_COMPONENT_NAME sw
#define SW_BASE 0x410b0
#define SW_SPAN 64
#define SW_END 0x410ef
#define SW_BIT_CLEARING_EDGE_REGISTER 0
#define SW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SW_CAPTURE 0
#define SW_DATA_WIDTH 10
#define SW_DO_TEST_BENCH_WIRING 0
#define SW_DRIVEN_SIM_VALUE 0
#define SW_EDGE_TYPE NONE
#define SW_FREQ 50000000
#define SW_HAS_IN 1
#define SW_HAS_OUT 0
#define SW_HAS_TRI 0
#define SW_IRQ_TYPE NONE
#define SW_RESET_VALUE 0

/*
 * Macros for device 'led', class 'altera_avalon_pio'
 * The macros are prefixed with 'LED_'.
 * The prefix is the slave descriptor.
 */
#define LED_COMPONENT_TYPE altera_avalon_pio
#define LED_COMPONENT_NAME led
#define LED_BASE 0x410c0
#define LED_SPAN 64
#define LED_END 0x410ff
#define LED_BIT_CLEARING_EDGE_REGISTER 0
#define LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LED_CAPTURE 0
#define LED_DATA_WIDTH 10
#define LED_DO_TEST_BENCH_WIRING 0
#define LED_DRIVEN_SIM_VALUE 0
#define LED_EDGE_TYPE NONE
#define LED_FREQ 50000000
#define LED_HAS_IN 0
#define LED_HAS_OUT 1
#define LED_HAS_TRI 0
#define LED_IRQ_TYPE NONE
#define LED_RESET_VALUE 0

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_QSYS_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define SYSID_QSYS_BASE 0x410d0
#define SYSID_QSYS_SPAN 8
#define SYSID_QSYS_END 0x410d7
#define SYSID_QSYS_ID 0
#define SYSID_QSYS_TIMESTAMP 1496323509


#endif /* _ALTERA_HPS_0_H_ */
